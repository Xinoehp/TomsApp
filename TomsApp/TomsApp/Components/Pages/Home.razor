@page "/"
@using Blazored.LocalStorage
@using TomsApp.Models



<MudContainer MaxWidth="MaxWidth.Large" Class="pt-10">
	<MudPaper>
		<EditForm OnValidSubmit="Save" Model="_character">
			<MudText Typo="Typo.h2">Gaia Complex</MudText>
			<MudPaper Class="mb-4">
				<MudTextField T="string" @bind-Value="_character.Name" HelperText="Name" />
				<MudTextField T="string" @bind-Value="_character.Role" HelperText="Role" />
				<MudTextField T="string" @bind-Value="_character.Species" HelperText="Species" />
			</MudPaper>

			<MudText Typo="Typo.h3">Stats and Skills</MudText>
			<MudGrid Spacing="3">

				<StatsAndSkills Stat="_character.Brawn" />
				<StatsAndSkills Stat="_character.Brains" />
				<StatsAndSkills Stat="_character.Perception" />
				<StatsAndSkills Stat="_character.Reflexes" />
				<StatsAndSkills Stat="_character.Allure" />
				<StatsAndSkills Stat="_character.Guts" />

			</MudGrid>

			<MudCard>
				<MudCardContent Style="display: flex;">
					<MudNumericField T="int" @bind-Value="_character.Grit.Current" HelperText="Current Grit" />
					<MudNumericField T="int" @bind-Value="_character.Grit.Max" HelperText="Max Grit" />
				</MudCardContent>
			</MudCard>
			<MudCard>
				<MudText Typo="Typo.h3">Hit Points</MudText>
				<MudCardContent Style="display: flex;">
					<MudNumericField T="int" @bind-Value="_character.Endurance.Current" HelperText="Current Endurance" />
					<MudNumericField T="int" @bind-Value="_character.Endurance.Max" HelperText="Max Endurance" />
				</MudCardContent>
				<MudCardContent Style="display: flex;">
					<MudNumericField T="int" @bind-Value="_character.Pressure.Current" HelperText="Current Pressure" />
					<MudNumericField T="int" @bind-Value="_character.Pressure.Max" HelperText="Max Pressure" />
				</MudCardContent>
				<MudCardContent Style="display: flex;">
					<MudNumericField T="int" @bind-Value="_character.Morale.Current" HelperText="Current Morale" />
					<MudNumericField T="int" @bind-Value="_character.Morale.Max" HelperText="Max Morale" />
				</MudCardContent>
			</MudCard>

			<MudCard>
				<MudCardContent Style="display: flex;">
					<MudNumericField T="int" @bind-Value="_character.Disconnect" HelperText="Disconnect" />
					<MudNumericField T="int" @bind-Value="_character.Exp" HelperText="Exp" />
				</MudCardContent>
			</MudCard>

			<MudCard>
				<MudText Typo="Typo.h3">Armour</MudText>
				<MudCardContent Style="display: flex;">
					<MudTextField T="string" @bind-Value="_character.Armour.Name" HelperText="Armour" />
					<MudTextField T="string" @bind-Value="_character.Armour.Protection" HelperText="Protection" />
					<MudTextField T="string" @bind-Value="_character.Armour.Tolerance" HelperText="Tolerance" />
				</MudCardContent>
			</MudCard>

			<MudCard>
				<MudText Typo="Typo.h3">Weapons</MudText>

				@foreach (Weapon weapon in _character.Weapons)
				{
					<MudCardContent Style="display: flex;">
						<MudTextField T="string" @bind-Value="@weapon.Name" HelperText="Weapon" />
						<MudTextField T="string" @bind-Value="@weapon.Skill" HelperText="Skill" />
						<MudTextField T="string" @bind-Value="@weapon.Range" HelperText="Range" />
						<MudTextField T="string" @bind-Value="@weapon.Damage" HelperText="Damage" />
						<MudTextField T="string" @bind-Value="@weapon.Clip" HelperText="Clip" />
						<MudTextField T="string" @bind-Value="@weapon.Rules" HelperText="Rules" />
						<MudIconButton Icon="@Icons.Material.Filled.Delete" OnClick="@(() => _character.Weapons.Remove(weapon))" />
					</MudCardContent>
					<MudDivider />
				}

				<MudTextField @bind-Value="newWeapon" Label="Weapon" Variant="Variant.Text"></MudTextField>
				<MudButton OnClick="@(() => AddWeapon(_character.Weapons))">Add weapon</MudButton>

			</MudCard>

			<MudCard>
				<MudText Typo="Typo.h3">Cybernetics, equipment, cash, notes...</MudText>

				@foreach (string o in _character.Others)
				{
					string other = o;
					<MudCardContent Style="display: flex;">
						<MudTextField T="string" @bind-Value="@other" />
						<MudIconButton Icon="@Icons.Material.Filled.Delete" OnClick="@(() => _character.Others.Remove(other))" />
					</MudCardContent>
					<MudDivider />
				}

				<MudTextField @bind-Value="newOther" Label="Add new" Variant="Variant.Text"></MudTextField>
				<MudButton OnClick="@(() => AddOther(_character.Others))">Add</MudButton>

			</MudCard>

			<MudCard>
				<MudCardContent Style="display: flex;">
					<MudButton OnClick="@(() => ExportCharacterAsync())">Export Character</MudButton>
					<MudButton OnClick="@(() => ClearCharacterSelected())">New Character</MudButton>
					<MudFileUpload T="IBrowserFile" Accept=".json" Context="fileInput" FilesChanged="UploadFiles">
						<ButtonTemplate>
							<MudButton HtmlTag="label"
									   Variant="Variant.Filled"
									   Color="Color.Primary"
									   StartIcon="@Icons.Material.Filled.CloudUpload"
									   for="@fileInput">
								Upload Character
							</MudButton>
						</ButtonTemplate>
					</MudFileUpload>
					<MudButton Color="Color.Primary" ButtonType="ButtonType.Submit">Save</MudButton>
				</MudCardContent>
			</MudCard>


		</EditForm>
	</MudPaper>
</MudContainer>